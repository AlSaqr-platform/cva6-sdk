# OpenOCD Configuration Script

# Ensure that _INTERFACE and _DEVICE variables are set
if { ![info exists _INTERFACE] } {
    echo "Error: _INTERFACE variable not set."
    exit 1
}
if { ![info exists _DEVICE] } {
    echo "Error: _DEVICE variable not set."
    exit 1
}

# Check if $OPENOCD_SCRIPTS is set
if { ![info exists ::env(OPENOCD_SCRIPTS)] } {
    echo "Error: OPENOCD_SCRIPTS variable not set. Please set OPENOCD_SCRIPTS environment variable."
    exit 1
}

# Construct the interface directory path using $OPENOCD_SCRIPTS
set interface_dir [file join $::env(OPENOCD_SCRIPTS) "interface" $_INTERFACE]

# Check if the interface directory exists
if { ![file isdirectory $interface_dir] } {
    echo "Error: Interface directory '$interface_dir' does not exist."
    exit 1
}

# Source the device configuration
set device_cfg [file join $interface_dir "${_DEVICE}.cfg"]
if { [catch {source $device_cfg} err] } {
    echo "Error sourcing device configuration '$device_cfg': $err"
    exit 1
}

# Use ID if provided
if { [info exists _ID] } {
    adapter serial $_ID
}

# Print and source target configuration
if { [info exists _TARGET] } {
    if { [catch {source [find target/${_TARGET}.cfg]} err] } {
        echo "Error sourcing target configuration: $err"
        exit 1
    }
} else {
    echo "Error: _TARGET variable not set."
    exit 1
}

echo "Configuration done!"

# GDB configuration
gdb_report_data_abort enable
gdb_report_register_access_error enable
